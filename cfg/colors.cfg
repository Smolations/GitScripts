## /* @config
#   @description
#   Variables are set to general style and color references, and then gitscripts-specific
#   tags are defined. It is not recommended to override the first block of definitions
#   as they are objectively set, but the second and third block of definitions
#   can be overridden in user.overrides to fit your own personal style.
#   description@
#
#   @notes
#   - These variable names are used throughout GitScripts, so changing them
#   will undoubtedly remove a color from somewhere.
#   notes@
#
#   @file cfg/colors.cfg
## */


# Git config colors set to match output. To preserve your current settings, be sure
# to set your colors after you have sourced _gsinit.sh.
# git status
git config --global color.status.added "green bold"
git config --global color.status.branch "magenta bold"
git config --global color.status.changed "yellow bold"
git config --global color.status.header "blue bold"
git config --global color.status.nobranch "yellow red bold"
git config --global color.status.untracked "red bold"
#git config --global color.status.updated ""

# git branch
git config --global color.branch.current "magenta bold"
git config --global color.branch.local "yellow"
#git config --global color.branch.plain ""
git config --global color.branch.remote "green"

# git diff
#git config --global color.diff.commit ""
#git config --global color.diff.frag ""
#git config --global color.diff.func ""
#git config --global color.diff.meta ""
git config --global color.diff.new "white green bold"
git config --global color.diff.old "white red bold"
#git config --global color.diff.plain ""
git config --global color.diff.whitespace "white reverse"


# set only whats needed for the PS1!


# Bash colors
PRE=$'\033['

# semantic styles and colors
GH_NORM=0
GH_BRIGHT=1
GH_DIM=2

# foreground
GH_BLACK=30
GH_RED=31
GH_GREEN=32
GH_YELLOW=33
GH_BLUE=34
GH_MAGENTA=35
GH_CYAN=36
GH_WHITE=37

# background
GH_BG_BLACK=40
GH_BG_RED=41
GH_BG_GREEN=42
GH_BG_YELLOW=43
GH_BG_BLUE=44
GH_BG_MAGENTA=45
GH_BG_CYAN=46
GH_BG_WHITE=47

# styles
GH_STYLE_BRIGHT="${PRE}${GH_BRIGHT}m"
GH_STYLE_NORM="${PRE}${GH_NORM}m"
GH_STYLE_DIM="${PRE}${GH_DIM}m"

# colors
GH_COL_RED="${PRE}${GH_RED}m"
GH_COL_GREEN="${PRE}${GH_GREEN}m"
GH_COL_YELLOW="${PRE}${GH_YELLOW}m"
GH_COL_BLUE="${PRE}${GH_BLUE}m"
GH_COL_MAGENTA="${PRE}${GH_MAGENTA}m"
GH_COL_CYAN="${PRE}${GH_CYAN}m"
GH_COL_WHITE="${PRE}${GH_WHITE}m"
GH_COL_NORM="${PRE}${GH_NORM}m"

# for __parse_git_branch_state
[ -n "${STYLE_AHEAD}" ]                             || export STYLE_AHEAD=${GH_STYLE_NORM}"${PRE}${GH_BLACK};${GH_BG_YELLOW}m"
[ -n "${STYLE_NO_REMOTE}" ]                         || export STYLE_NO_REMOTE=${GH_STYLE_NORM}"${PRE}${GH_BLACK};${GH_BG_YELLOW}m"
[ -n "${STYLE_BEHIND}" ]                            || export STYLE_BEHIND=${GH_STYLE_NORM}"${PRE}${GH_BLACK};${GH_BG_YELLOW}m"
[ -n "${STYLE_DELETEDFILE}" ]                       || export STYLE_DELETEDFILE=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_RED}
[ -n "${STYLE_DIRTY}" ]                             || export STYLE_DIRTY=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_GRAY};${GH_BG_RED}m"
[ -n "${STYLE_MODIFIED}" ]                          || export STYLE_MODIFIED=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_NEWFILE}" ]                           || export STYLE_NEWFILE=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_WHITE};${GH_BG_GREEN}m"
[ -n "${STYLE_RENAMEDFILE}" ]                       || export STYLE_RENAMEDFILE=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_WHITE};${GH_BG_BLUE}m"
[ -n "${STYLE_STAGED}" ]                            || export STYLE_STAGED=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_GREEN}
[ -n "${STYLE_UNTRACKED}" ]                         || export STYLE_UNTRACKED=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_RED};${GH_BG_WHITE}m"


# descriptive styles and colors
[ -n "${STYLE_ACTION}" ]                            || export STYLE_ACTION=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_MAGENTA}
[ -n "${STYLE_ERROR}" ]                             || export STYLE_ERROR=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_WHITE};${GH_BG_RED}m"
[ -n "${STYLE_SUCCESS}" ]                           || export STYLE_SUCCESS=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_GREEN};${GH_BG_BLACK}m"
[ -n "${STYLE_H1}" ]                                || export STYLE_H1=${GH_STYLE_NORM}"${PRE}${GH_WHITE};${GH_BG_GREEN}m"
[ -n "${STYLE_H2}" ]                                || export STYLE_H2=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_BG_BLUE}m"
[ -n "${STYLE_OUTPUT}" ]                            || export STYLE_OUTPUT=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_BLUE}
[ -n "${STYLE_INPUT}" ]                             || export STYLE_INPUT=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_WHITE};${GH_BG_BLUE}m"
[ -n "${STYLE_WARNING}" ]                           || export STYLE_WARNING=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_YELLOW};${GH_BG_RED}m"
[ -n "${STYLE_QUESTION}" ]                          || export STYLE_QUESTION=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}
[ -n "${STYLE_NEWBRANCH_H1}" ]                      || export STYLE_NEWBRANCH_H1=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_OLDBRANCH_H1}" ]                      || export STYLE_OLDBRANCH_H1=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_NEWBRANCH_H2}" ]                      || export STYLE_NEWBRANCH_H2=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_OLDBRANCH_H2}" ]                      || export STYLE_OLDBRANCH_H2=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_BRANCH_WARNING}" ]                    || export STYLE_BRANCH_WARNING=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}"${PRE}${GH_CYAN};${GH_BG_RED}m"
[ -n "${STYLE_NEWBRANCH_WARNING}" ]                 || export STYLE_NEWBRANCH_WARNING=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_OLDBRANCH_WARNING}" ]                 || export STYLE_OLDBRANCH_WARNING=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_OLDBRANCH}" ]                         || export STYLE_OLDBRANCH=${GH_STYLE_NORM}${GH_COL_RED}
[ -n "${STYLE_NEWBRANCH}" ]                         || export STYLE_NEWBRANCH=${GH_STYLE_NORM}${GH_COL_RED}
[ -n "${STYLE_BRANCH}" ]                            || export STYLE_BRANCH=${GH_STYLE_NORM}${GH_COL_CYAN}
[ -n "${STYLE_BRANCH_H1}" ]                         || export STYLE_BRANCH_H1=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}
[ -n "${STYLE_BRANCH_H2}" ]                         || export STYLE_BRANCH_H2=${GH_STYLE_NORM}${GH_STYLE_BRIGHT}${GH_COL_YELLOW}

# shortcut styles for above
# [ -n "${H1}" ]                                      || export H1=${STYLE_H1}
# [ -n "${H1B}" ]                                     || export H1B=${STYLE_BRANCH_H1}
# [ -n "${H2}" ]                                      || export H2=${STYLE_H2}
# [ -n "${H2B}" ]                                     || export H2B=${STYLE_BRANCH_H2}
# [ -n "${WB}" ]                                      || export WB=${STYLE_BRANCH_WARNING}
# [ -n "${A}" ]                                       || export A=${STYLE_ACTION}
# [ -n "${B}" ]                                       || export B=${STYLE_BRANCH}
# [ -n "${E}" ]                                       || export E=${STYLE_ERROR}
# [ -n "${S}" ]                                       || export S=${STYLE_SUCCESS}
# [ -n "${I}" ]                                       || export I=${STYLE_INPUT}
# [ -n "${O}" ]                                       || export O=${STYLE_OUTPUT}
# [ -n "${Q}" ]                                       || export Q=${STYLE_QUESTION}
# [ -n "${W}" ]                                       || export W=${STYLE_WARNING}
[ -n "${X}" ]                                       || export X=${GH_STYLE_NORM}

# git-hug-specific targeted styles
# and colors

# if you like the format of the command
# prompt but not the colors themselves,
# override
[ -n "${STYLE_PROMPT_DATE}" ]                       || export STYLE_PROMPT_DATE=${GH_STYLE_BRIGHT}${GH_COL_BLUE}
[ -n "${STYLE_PROMPT_PATH}" ]                       || export STYLE_PROMPT_PATH=${GH_COL_CYAN}
[ -n "${STYLE_PROMPT_PATH_BRANCH}" ]                || export STYLE_PROMPT_PATH_BRANCH=${GH_COL_GREEN}
[ -n "${STYLE_PROMPT_BRANCH}" ]                     || export STYLE_PROMPT_BRANCH=${GH_STYLE_BRIGHT}"${PRE}${GH_MAGENTA}m"
[ -n "${STYLE_PROMPT_USER}" ]                       || export STYLE_PROMPT_USER=${GH_COL_RED}
