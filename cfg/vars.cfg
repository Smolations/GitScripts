## /*
#	@description
#	The purpose of this file is to set variables which contain crucial information
#	for ALL gitscripts. However, any information that needs to persist for multiple gitscripts
#	should find it's home in this file.
#	description@
#
#	@notes
#	- Do NOT edit values in this file for personal use. Instead use cfg/user.overrides.
#	- Variables are set using the following syntax:
#
#		[ -n "$VAR_NAME" ] || VAR_NAME="value"
#
#	This syntax means that Bash will only assign the value to the variable if
#	the variable does not already exist or has an empty string as it's value.
#	- Variable names are NOT required to be strictly uppercase.
#	- Current convention requires trailing slash for all variables referencing a directory.
#	- These scripts have been developed using msysgit for Windows so many of the
#	variables below may need to be overridden, or associated flags may need to be set.
#	notes@
## */


# Git-specific
[ -n "$GIT_INSTALL" ] || export GIT_INSTALL=/c/Git/
[ -n "$GIT_BIN" ] || export GIT_BIN="${GIT_INSTALL}bin/"
[ -n "$GIT_ETC" ] || export GIT_ETC="${GIT_INSTALL}etc/"


# a custom message of the day that replaces the one that comes with Git.
# this custom motd replaces Git's unless the $replace_motd variable is set
# to anything other than an empty string in user.overrides.
[ -n "$native_motd_path" ] || export native_motd_path="${GIT_ETC}motd"
[ -n "$gitscripts_motd_path" ] || export gitscripts_motd_path="${gitscripts_path}motd"


# allow new scripts to access functions easily
export loadfuncs="source ${gitscripts_path}gsfunctions.sh"